Input sets up event channel 
resource for Key events.

maybe InputCommand system that turns Key events into 
Command events on its own channel?

maybe the input system could just do both for now...

No, we want to separate command types so different systems dont have to go through every single command.

And the input system would be too big if it handled sending out keys, AND commands to each relevant channel

We want inputs in part to be processed the same way AI commands are. Because of that, we should send our commands first to a intermediary system that separates them into their own types, and sends them out to the corresponding readers. 

I.e. Command::Move(Dir) gets send from Input system toAction system, which wraps it in a 
MoveCommand(Command::Move(Dir))


